events {
    worker_connections 1024;  # Número máximo de conexiones simultáneas por worker
}

http {

    large_client_header_buffers 4 1m;

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;  # Redirige todo el tráfico HTTP a HTTPS
    }

    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate           /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key       /etc/nginx/ssl/private.key;
        ssl_trusted_certificate   /etc/nginx/ssl/ca_bundle.crt;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

	    set $backend_ip "172.19.0.1";
	    set $docker_ip "172.17.0.1";

        error_page 502 /502.html;
        location = /502.html {
            root /usr/share/nginx/html;
            internal;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location / {
            rewrite ^/$ /admin permanent;
        }

        location /admin {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://$backend_ip:4500;
        }

        location /security {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://$backend_ip:4880;
        }

        location /law {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";

          proxy_pass http://$backend_ip:4890;
        }

        location /payment {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://$backend_ip:5000;
        }

        location /analytics {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://$backend_ip:4900;
        }

	location /rabbit/ {
	  proxy_set_header Host $host;
	  proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Forwarded-Proto $scheme;
	  proxy_pass http://172.19.0.4:15672;
          rewrite ^/rabbit/(.*)$ /$1 break;  # Elimina el prefijo /rabbit
	}

	location /minio/ui/ {
           rewrite ^/minio/ui/(.*)$ /$1 break;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
           real_ip_header X-Real-IP;

           proxy_connect_timeout 300;

           # To support websocket
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";

           chunked_transfer_encoding off;
           proxy_pass http://172.19.0.6:9001; # This uses the upstream directive definition to load balance

           # This one rewrite with sub_filter plugin
           sub_filter '<base href="/"/>' '<base href="/minio/ui/"/>';
	}

        location /s3/ {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://$172.19.0.6:9000;
          rewrite ^/s3/(.*)$ /$1 break;  # Elimina el prefijo /rabbit
        }

        location /ui/ {
            proxy_pass http://172.19.0.8:8500;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_connect_timeout 300;
        }

        location /medfri-getway {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            real_ip_header X-Real-IP;

            proxy_pass http://172.18.0.10:8070;
        }


        location /ws {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_pass http://172.19.0.4:15674;
        }

    }
}
